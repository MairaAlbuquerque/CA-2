class Products:
    def init(self, description, seller, price, curr):
        self.description = description
        self.seller = seller
        self.price = price
        self.curr = curr
        
# Products = {a:('suitcase', 'paul', 65, 'EUR'),                     // I guess the products are not being created due to error. Infact you
           # b:('suitcase', 'maira', 80, 'EUR'),                       should create Products below. I tried sorting yours! Try testing this: 
           # c:('earphones', 'wayne', 10, 'EUR'),                    
           # d:('earphones', 'paul', 8, 'USD'),
           # e: ('jeans', 'maira', 5, 'CAD'}
            
        
prices = {'EUR':1, 'USD':1.23, 'CAD':1.56}

class Basket:
    def __init__(self):
        self.__shoppingBasket = {}
        
    def add_item(self, sku, qty):
        self.__shoppingBasket[sku]=self.getBalance_items(sku)+qty
        
    def remove_item(self, sku, qty):
        self.__shoppingBasket[sku]=self.getBalance_items(sku)-qty
        
    def getBalance_items(self, sku):
        if sku not in self.__shoppingBasket:
            return 0
        return self.__shoppingBasket[sku]
    
    def getValue(self, sku):    #not multiplies by prices(rates)
        if sku not in self.__shoppingBasket:
            return 0            
        sku.price*self.__shoppingBasket[sku]
        
      --------------------------------------------------------------------------------------------------------------------  
       Testing:
       
       test=Products()
       Product1=test.init("suitcase","Arnotts",23,"EUR")
       Product2=test.init("pillows","Arnotts",34,"EUR")
       
       MyCase= Basket()
       MyCase.add_item("suitcase", 1)
       MyCase.add_item("pillows", 2)
       
       print( MyCase.getBalance_items("suitcase"))
       
        
        
        
